rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      
      // Users can update their own document BUT cannot modify beta fields
      // Only Admin SDK (server-side) can modify beta fields
      allow update: if isOwner(userId) 
        && !request.resource.data.diff(resource.data).affectedKeys().hasAny([
          'betaAccess',
          'betaGrantedAt',
          'betaGrantedBy',
          'betaReason',
          'betaNotes',
          'betaRevokedAt',
          'betaRevokedBy'
        ]);
      
      allow delete: if isOwner(userId);
    }
    
    // Assets collection
    match /assets/{assetId} {
      allow read: if resource.data.visibility == 'public' || isOwner(resource.data.userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
    }
    
    // Collections
    match /collections/{collectionId} {
      allow read: if resource.data.visibility == 'public' || isOwner(resource.data.userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId);
    }
    
    // AI Jobs
    match /jobs/{jobId} {
      allow read, write: if isOwner(resource.data.userId);
    }
    
    // Sales
    match /sales/{saleId} {
      allow read: if isOwner(resource.data.sellerId) || isOwner(resource.data.buyerId);
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data.sellerId) || isOwner(resource.data.buyerId);
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read, update: if isOwner(resource.data.userId);
      allow create: if isAuthenticated();
    }
  }
}